/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        left_shift {
            bindings = <&sk LEFT_SHIFT>;
            key-positions = <14 37>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <37 16>;
            layers = <0>;
        };

        ctrl2 {
            bindings = <&sk LCTRL>;
            key-positions = <37 28>;
            layers = <0>;
        };

        alt-tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <37 21>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q  &kp W  &kp F  &kp P         &kp B        &kp J    &kp L          &kp U      &kp Y    &kp SEMICOLON  &trans
&trans  &kp A  &kp R  &kp S  &kp T         &kp G        &kp M    &kp N          &kp E      &kp I    &kp O          &trans
&trans  &kp Z  &kp X  &kp C  &kp D         &kp V        &kp K    &kp H          &kp COMMA  &kp DOT  &kp FSLH       &trans
                      &mo 1  &kp LEFT_ALT  &kp SPACE    &kp RET  &kp BACKSPACE  &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp TILDE      &kp LESS_THAN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GREATER_THAN    &kp N6   &kp N7                     &kp N8    &kp N9          &kp N0     &kp BSPC
&trans  &kp GRAVE      &kp UNDER      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND       &trans   &kp LEFT                   &kp DOWN  &kp UP_ARROW    &kp RIGHT  &trans
&trans  &kp BACKSLASH  &kp AT_SIGN    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE            &trans   &kt LEFT_SHIFT             &trans    &studio_unlock  &sl 3      &trans
                                      &kp LGUI              &trans                 &kp SPACE           &kp RET  &mt LEFT_SHIFT LEFT_SHIFT  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL   &kp PLUS         &kp MINUS     &kp EQUAL   &kp PRCNT    &kp PERCENT  &kp N7        &kp N8        &kp N9        &kp ASTERISK  &trans
&kp LCTRL  &kp TILDE  &kp EXCLAMATION  &kp QUESTION  &kp ESCAPE  &kp HASH     &kp PERIOD   &kp N0        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&kp LSHFT  &trans     &trans           &trans        &trans      &kp F12      &kp DOLLAR   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SLASH     &trans
                                       &kp LGUI      &kp CLCK    &kp SPACE    &kp RET      &trans        &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans    &trans          &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &trans    &studio_unlock  &trans  &trans  &trans  &trans  &trans
&trans  &bt BT_CLR    &trans        &trans        &kp P         &trans    &bt BT_CLR_ALL  &trans  &trans  &trans  &trans  &trans
                                    &trans        &trans        &trans    &trans          &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
